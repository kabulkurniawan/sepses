input {
  beats{
	port => 5044
}
}

filter {
  if [log-type] == "syslog" {
     grok {
       match => { "message" => "%{SYSLOGBASE}"}
     }
     date{
       locale => "en"
       timezone => "Europe/Vienna"
       match => ["timestamp","MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601"]
       target => "timestamp"   
     }
     syslog_pri{}
     mutate{
       convert => {syslog_pid => "integer"
                   syslog_severity_code => "integer"
                   syslog_facility_code => "integer"}
       add_field =>{ 
                     "[@context][sys]"=>"http://kabulkurniawan.com/vocab/syslog-event#"
                     "[@context][sys:program][@type]"=>"@id"
                      "[sys:pid][@value]"=>"%{pid}"
                      "[@context][sys:severity][@type]"=>"@id"
                      "[@context][sys:facility][@type]"=>"@id"
                      "[sys:severity_code][@value]"=>"%{syslog_severity_code}"
                      "[sys:facility_code][@value]"=>"%{syslog_facility_code}"
                      "[sys:pid][@type]"=>"xsd:Int"
                      "[sys:severity_code][@type]"=>"xsd:int"
                      "[sys:facility_code][@type]"=>"xsd:int"
                      "[sys:program]"=>"sys:%{program}"
                      "[sys:severity]"=>"sys:%{syslog_severity}"
                      "[sys:facility]"=>"sys:%{syslog_facility}" 
            }
      remove_field =>["program","pid","syslog_program","syslog_pid","syslog_facility_code","syslog_facility","syslog_severity_code", "syslog_severity"]
     }
        
   

  } else if [log-type] == "apache" {
     grok {
      match => { "message" => "%{COMBINEDAPACHELOG}"}
     }

    date {
      locale => "en"
      timezone => "Europe/Vienna"
      match => ["timestamp","dd/MMM/yyyy:HH:mm:ss Z"]
      target => "timestamp"  
    }
    mutate {
      gsub => ["referrer","\"",""]
      convert => {"bytes" => "integer"}
   
     add_field => { "[@context][ape]" =>"http://kabulkurniawan.com/vocab/apache-event#"
                   "[@context][ape:requestVerb][@type]"=>"@id"
                   "[@context][ape:Client][@type]"=>"@id"
                   "[@context][ape:responseType][@type]"=>"@id"
                   "[@context][ape:referrer][@id]"=>"ape:referrer"
                   "[@context][ape:referrer][@type]"=> "@id"
                   "[ape:requestVerb]"=>"ape:%{verb}"
                   "[ape:responseType]"=>"ape:%{response}"
                   "[ape:resourceSize][@type]"=>"xsd:Int"
                   "[ape:resourceSize][@value]"=>"%{bytes}"
                   "[ape:Resource][@type]"=>"xsd:String"
                   "[ape:Resource][@value]"=>"%{request}"
                   "[ape:Client]"=>"ape:%{clientip}"
                   "[ape:agent][@type]"=>"xsd:String"
                   "[ape:agent][@value]"=>"ape:%{agent}"
                   "[ape:httpVersion][@type]"=>"xsd:String"
                   "[ape:httpVersion][@value]"=>"%{httpversion}"
                   "[ape:referrer]"=>"%{referrer}"
    } 
    remove_field => ["verb","response","bytes","request","clientip","agent","httpversion","referrer"]
  }
  } else{
  
  }
   mutate{
    

     add_field => { "[@context][glog]" => "http://kabulkurniawan.com/vocab/genlog#"
                    "[@context][xsd]"=> "http://www.w3.org/2001/XMLSchema#"
                    "[@context][glog:originatesFrom][@type]" =>"@id"
                    "[@context][glog:hasLogType][@type]" => "@id"
                    "[@id]"=>"glog:logEntry1"
                    "[glog:logTimeStamp][@type]" => "xsd:String"
                    "[glog:logTimeStamp][@value]" => "%{timestamp}"
                    "[glog:logMessage][@type]" => "xsd:String"
                    "[glog:logMessage][@value]"=> "%{message}"
                    "[glog:logFilePath][@type]" => "xsd:String"
                    "[glog:logFilePath][@value]" =>  "%{source}"
                    "[glog:hasLogType]" => "glog:%{log-type}"
                    "[glog:originatesFrom]" => "glog:%{host}"
              
        }

     remove_field => ["logsource","tags","beat","prospector","@timestamp","@version","offset","message","source","timestamp","host","log-type"]
     
    
      
  }
 
 }

output { 
  file {
        path => "/home/kabul/outputlogstash/genlog_output.json"
    }
 stdout{
       codec => rubydebug
 }
 }
