input {
  beats{
	port => 5044
}
}

filter {
  if [log-type] == "syslog" {
     grok {
       match => { "message" => "%{SYSLOGBASE}"}
     }
     date{
       locale => "en"
       timezone => "Europe/Vienna"
       match => ["timestamp","MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601"]
       target => "timestamp"   
     }
     syslog_pri{}
     mutate{
       convert => {syslog_pid => "integer"
                   syslog_severity_code => "integer"
                   syslog_facility_code => "integer"}
       add_field =>{ 
                     "[@context][sl]"=>"http://purl.org/sepses/vocab/log/sysLog#"
                     "[@context][slb]"=>"http://example.org/knowledge/syslog#"
                     "[@context][sl:program][@type]"=>"@id"
                      "[sl:processId][@value]"=>"%{pid}"
                      "[@context][sl:severity][@type]"=>"@id"
                      "[@context][sl:facility][@type]"=>"@id"
                      "[sl:severityLevel][sl:severityCode][@value]"=>"%{syslog_severity_code}"
                      "[sl:facilityCode][@value]"=>"%{syslog_facility_code}"
                      "[sl:processId][@type]"=>"xsd:Int"
                      "[sl:severityLevel][sl:severityCode][@type]"=>"xsd:int"
                      "[sl:facilityCode][@type]"=>"xsd:int"
                      "[sl:program]"=>"sl:%{program}"
                      "[sl:severityLevel][sl:severity]"=>"slb:%{syslog_severity}"
                      "[sl:facility]"=>"slb:%{syslog_facility}" 
            }
      remove_field =>["program","pid","syslog_program","syslog_pid","syslog_facility_code","syslog_facility","syslog_severity_code", "syslog_severity"]
     }
        
   

  } else if [log-type] == "apache" {
     grok {
      match => { "message" => "%{COMBINEDAPACHELOG}"}
     }

    date {
      locale => "en"
      timezone => "Europe/Vienna"
      match => ["timestamp","dd/MMM/yyyy:HH:mm:ss Z"]
      target => "timestamp"  
    }
    mutate {
      gsub => ["referrer","\"",""]
      convert => {"bytes" => "integer"}
   
     add_field => { "[@context][al]" =>"http://purl.org/sepses/vocab/log/apacheLog#"
                   "[@context][alb]"=>"http://example.or/knowledge/apache#"
                   "[@context][al:requestVerb][@type]"=>"@id"
                   "[@context][al:Client][@type]"=>"@id"
                   "[@context][al:responseType][@type]"=>"@id"
                   "[@context][al:referrer][@id]"=>"ape:referrer"
                   "[@context][al:referrer][@type]"=> "@id"
                   "[al:requestVerb]"=>"alb:%{verb}"
                   "[al:responseType]"=>"alb:%{response}"
                   "[al:resourceSize][@type]"=>"xsd:Int"
                   "[al:resourceSize][@value]"=>"%{bytes}"
                   "[al:Resource][@type]"=>"xsd:String"
                   "[al:Resource][@value]"=>"%{request}"
                   "[al:Client]"=>"glogbg:%{clientip}"
                   "[al:agent][@type]"=>"xsd:String"
                   "[al:agent][@value]"=>"ape:%{agent}"
                   "[al:httpVersion][@type]"=>"xsd:String"
                   "[al:httpVersion][@value]"=>"%{httpversion}"
                   "[al:referrer]"=>"%{referrer}"
    } 
    remove_field => ["verb","response","bytes","request","clientip","agent","httpversion","referrer"]
  }
  } else{
  
  }
   mutate{
    

     add_field => { "[@context][bl]" => "http://purl.org/sepses/vocab/baseLog#"
                    "[@context][blb]"=>"http://example.or/knowledge/base#"
                    "[@context][xsd]"=> "http://www.w3.org/2001/XMLSchema#"
                    "[@context][bl:originatesFrom][@type]" =>"@id"
                    "[@context][bl:hasLogType][@type]" => "@id"
                    "[@id]"=>"bl:logEntry1"
                    "[bl:timestamp][@type]" => "xsd:String"
                    "[bl:timestamp][@value]" => "%{timestamp}"
                    "[bl:logMessage][@type]" => "xsd:String"
                    "[bl:logMessage][@value]"=> "%{message}"
                    "[bl:logFilePath][@type]" => "xsd:String"
                    "[bl:logFilePath][@value]" =>  "%{source}"
                    "[bl:hasLogType]" => "blb:%{log-type}"
                    "[bl:originatesFrom]" => "blb:%{host}"
              
        }

     remove_field => ["logsource","tags","beat","prospector","@timestamp","@version","offset","message","source","timestamp","host","log-type"]
     
    
      
  }
 
 }

output { 
  file {
        path => "/home/kabul/outputlogstash/sepses_output.json"
    }
 stdout{
       codec => rubydebug
 }
 }
